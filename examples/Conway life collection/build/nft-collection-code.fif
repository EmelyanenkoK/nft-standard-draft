"Asm.fif" include
// automatically generated from `../../stdlib.fc` `nft-collection.fc` 
PROGRAM{
  DECLPROC load_data
  DECLPROC save_data
  DECLPROC calculate_nft_state_init
  DECLPROC calculate_nft_address
  DECLPROC after_code_upgrade
  DECLPROC recv_internal
  DECLPROC recv_external
  85143 DECLMETHOD seqno
  81467 DECLMETHOD get_subwallet_id
  78748 DECLMETHOD get_public_key
  83856 DECLMETHOD get_next_index
  92067 DECLMETHOD get_nft_address_by_index
  84773 DECLMETHOD get_std_nft_address_by_index
  80895 DECLMETHOD member_content
  65637 DECLMETHOD member_uri
  85719 DECLMETHOD royalty_params
  load_data PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  ds
    32 LDU	//  _3 ds
    32 LDU	//  _3 _6 ds
    256 LDU	//  _3 _6 _9 ds
    64 LDU	//  _3 _6 _9 _12 ds
    LDREF	//  _3 _6 _9 _12 _15 ds
    LDREF	//  _3 _6 _9 _12 _15 _30 _29
    DROP	//  _3 _6 _9 _12 _15 _17
  }>
  save_data PROC:<{
    //  seqno collection_id public_key next_index content code
    s0 s5 XCHG
    NEWC	//  code collection_id public_key next_index content seqno _6
    32 STU	//  code collection_id public_key next_index content _8
    s1 s4 XCHG	//  code content public_key next_index collection_id _8
    32 STU	//  code content public_key next_index _10
    s1 s2 XCHG	//  code content next_index public_key _10
    256 STU	//  code content next_index _12
    64 STU	//  code content _14
    STREF	//  code _15
    STREF	//  _16
    ENDC	//  _17
    c4 POP
  }>
  calculate_nft_state_init PROC:<{
    //  index code
    SWAP
    NEWC	//  code index _3
    64 STU	//  code _5
    MYADDR	//  code _5 _6
    STSLICER	//  code _7
    ENDC	//  code data
    0 PUSHINT	//  code data _9=0
    DUP	//  code data _9=0 _10=0
    NEWC	//  code data _9=0 _10=0 _11
    2 STU	//  code data _9=0 _13
    s1 s3 XCHG	//  _9=0 data code _13
    STDICT	//  _9=0 data _14
    STDICT	//  _9=0 _15
    1 STU	//  _17
    ENDC	//  _18
  }>
  calculate_nft_address PROC:<{
    //  workchain init_data
    HASHCU	//  workchain _2
    4 PUSHINT	//  workchain _2 _3=4
    NEWC	//  workchain _2 _3=4 _4
    3 STU	//  workchain _2 _6
    s1 s2 XCHG	//  _2 workchain _6
    8 STI	//  _2 _8
    256 STU	//  _10
    ENDC	//  _11
    CTOS	//  _12
  }>
  after_code_upgrade PROC:<{
    //  data
    DROP	// 
  }>
  recv_internal PROC:<{
    //  msg_value in_msg_cell in_msg
    3 BLKDROP	// 
  }>
  recv_external PROC:<{
    //  in_msg
    9 PUSHPOW2	//  in_msg _3=512
    LDSLICEX	//  signature in_msg
    DUP	//  signature in_msg cs
    32 LDU	//  signature in_msg _9 cs
    32 LDU	//  signature in_msg _9 _12 cs
    32 LDU	//  signature in_msg collection_id valid_until msg_seqno cs
    s0 s2 XCHG
    NOW	//  signature in_msg collection_id cs msg_seqno valid_until _19
    LEQ	//  signature in_msg collection_id cs msg_seqno _20
    36 THROWIF
    load_data INLINECALLDICT	//  signature in_msg collection_id cs msg_seqno stored_seqno stored_collection_id public_key next_index common_content code
    s6 s5 XCPU	//  signature in_msg collection_id cs code stored_seqno stored_collection_id public_key next_index common_content msg_seqno stored_seqno
    EQUAL	//  signature in_msg collection_id cs code stored_seqno stored_collection_id public_key next_index common_content _30
    33 THROWIFNOT
    s7 s3 XCPU	//  signature in_msg common_content cs code stored_seqno stored_collection_id public_key next_index collection_id stored_collection_id
    EQUAL	//  signature in_msg common_content cs code stored_seqno stored_collection_id public_key next_index _33
    34 THROWIFNOT
    s0 s7 XCHG	//  signature next_index common_content cs code stored_seqno stored_collection_id public_key in_msg
    HASHSU	//  signature next_index common_content cs code stored_seqno stored_collection_id public_key _36
    s0 s8 s8 XC2PU	//  public_key next_index common_content cs code stored_seqno stored_collection_id _36 signature public_key
    CHKSIGNU	//  public_key next_index common_content cs code stored_seqno stored_collection_id _37
    35 THROWIFNOT
    ACCEPT
    SWAP	//  public_key next_index common_content cs code stored_collection_id stored_seqno
    INC	//  public_key next_index common_content cs code stored_collection_id stored_seqno
    s0 s1 s6 PUSH3
    s8 s7 s5 PUSH3	//  public_key next_index common_content cs code stored_collection_id stored_seqno stored_seqno stored_collection_id public_key next_index common_content code
    save_data INLINECALLDICT
    COMMIT
    s0 s3 XCHG	//  public_key next_index common_content stored_seqno code stored_collection_id cs
    8 LDU	//  public_key next_index common_content stored_seqno code stored_collection_id op cs
    1000000000 PUSHINT	//  public_key next_index common_content stored_seqno code stored_collection_id op cs _50=1000000000
    2 PUSHINT	//  public_key next_index common_content stored_seqno code stored_collection_id op cs _50=1000000000 _51=2
    RAWRESERVE
    OVER	//  public_key next_index common_content stored_seqno code stored_collection_id op cs op
    0 EQINT	//  public_key next_index common_content stored_seqno code stored_collection_id op cs _54
    IFJMP:<{	//  public_key next_index common_content stored_seqno code stored_collection_id op cs
      7 1 BLKDROP2	//  cs
      WHILE:<{
        DUP	//  cs cs
        SREFS	//  cs _55
      }>DO<{	//  cs
        8 LDU	//  mode cs
        LDREF	//  mode _60 cs
        s0 s2 XCHG
        2 PUSHINT	//  cs _60 mode _62=2
        AND	//  cs _60 _63
        SENDRAWMSG
      }>	//  cs
      DROP	// 
    }>	//  public_key next_index common_content stored_seqno code stored_collection_id op cs
    OVER	//  public_key next_index common_content stored_seqno code stored_collection_id op cs op
    1 EQINT	//  public_key next_index common_content stored_seqno code stored_collection_id op cs _66
    IFJMP:<{	//  public_key next_index common_content stored_seqno code stored_collection_id op cs
      NIP	//  public_key next_index common_content stored_seqno code stored_collection_id cs
      s5 s2 PUSH2	//  public_key next_index common_content stored_seqno code stored_collection_id cs next_index code
      calculate_nft_state_init CALLDICT	//  public_key next_index common_content stored_seqno code stored_collection_id cs state_init
      0 PUSHINT	//  public_key next_index common_content stored_seqno code stored_collection_id cs state_init _70=0
      OVER	//  public_key next_index common_content stored_seqno code stored_collection_id cs state_init _70=0 state_init
      calculate_nft_address CALLDICT	//  public_key next_index common_content stored_seqno code stored_collection_id cs state_init nft_address
      s0 s2 XCHG	//  public_key next_index common_content stored_seqno code stored_collection_id nft_address state_init cs
      LDREF	//  public_key next_index common_content stored_seqno code stored_collection_id nft_address state_init _73 cs
      7 PUSHINT	//  public_key next_index common_content stored_seqno code stored_collection_id nft_address state_init _73 cs _79
      24 PUSHINT	//  public_key next_index common_content stored_seqno code stored_collection_id nft_address state_init _73 cs _79 _80=24
      NEWC	//  public_key next_index common_content stored_seqno code stored_collection_id nft_address state_init _73 cs _79 _80=24 _81
      6 STU	//  public_key next_index common_content stored_seqno code stored_collection_id nft_address state_init _73 cs _79 _83
      s0 s5 XCHG2	//  public_key next_index common_content stored_seqno code stored_collection_id _79 state_init _73 cs _83 nft_address
      STSLICER	//  public_key next_index common_content stored_seqno code stored_collection_id _79 state_init _73 cs _84
      SWAP	//  public_key next_index common_content stored_seqno code stored_collection_id _79 state_init _73 _84 cs
      LDGRAMS	//  public_key next_index common_content stored_seqno code stored_collection_id _79 state_init _73 _84 _160 _159
      DROP	//  public_key next_index common_content stored_seqno code stored_collection_id _79 state_init _73 _84 _85
      STGRAMS	//  public_key next_index common_content stored_seqno code stored_collection_id _79 state_init _73 _87
      s1 s3 XCHG	//  public_key next_index common_content stored_seqno code stored_collection_id _73 state_init _79 _87
      108 STU	//  public_key next_index common_content stored_seqno code stored_collection_id _73 state_init _103
      STREF	//  public_key next_index common_content stored_seqno code stored_collection_id _73 _104
      STREF	//  public_key next_index common_content stored_seqno code stored_collection_id msg
      ENDC	//  public_key next_index common_content stored_seqno code stored_collection_id _106
      3 PUSHINT	//  public_key next_index common_content stored_seqno code stored_collection_id _106 _107=3
      SENDRAWMSG
      s0 s4 XCHG	//  public_key stored_collection_id common_content stored_seqno code next_index
      INC	//  public_key stored_collection_id common_content stored_seqno code next_index
      s0 s1 s5 XCHG3
      s3 s3 XCHG2	//  stored_seqno stored_collection_id public_key next_index common_content code
      save_data INLINECALLDICT
    }>	//  public_key next_index common_content stored_seqno code stored_collection_id op cs
    6 2 BLKDROP2	//  op cs
    OVER	//  op cs op
    2 EQINT	//  op cs _113
    IF:<{	//  op cs
      LDREF	//  op new_code cs
      OVER	//  op new_code cs new_code
      SETCODE
      DUP	//  op new_code cs cs
      SREFS	//  op new_code cs _118
      0 GTINT	//  op new_code cs _120
      IF:<{	//  op new_code cs
        LDREF	//  op new_code _122 cs
        SWAP	//  op new_code cs _122
        CTOS	//  op new_code cs post_process
        s0 s2 XCHG	//  op post_process cs new_code
        CTOS	//  op post_process cs _125
        BLESS	//  op post_process cs _126
        c3 POP
        SWAP	//  op cs post_process
        after_code_upgrade CALLDICT
        0 THROW
      }>ELSE<{
        NIP	//  op cs
      }>
    }>	//  op cs
    SWAP	//  cs op
    3 EQINT	//  cs _132
    IF:<{	//  cs
      LDREF	//  _166 _165
      DROP	//  new_storage
      c4 POP
    }>ELSE<{
      DROP	// 
    }>
  }>
  seqno PROC:<{
    // 
    c4 PUSH	//  _0
    CTOS	//  _1
    32 PLDU	//  _3
  }>
  get_subwallet_id PROC:<{
    // 
    c4 PUSH	//  _0
    CTOS	//  _1
    32 PUSHINT	//  _1 _2=32
    SDSKIPFIRST	//  _3
    32 PLDU	//  _5
  }>
  get_public_key PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  _2
    64 PUSHINT	//  _2 _3=64
    SDSKIPFIRST	//  cs
    256 PLDU	//  _6
  }>
  get_next_index PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  _2
    320 PUSHINT	//  _2 _5
    SDSKIPFIRST	//  cs
    64 PLDU	//  _8
  }>
  get_nft_address_by_index PROC:<{
    //  index
    load_data INLINECALLDICT	//  index _12 _13 _14 _15 _16 _17
    5 1 BLKDROP2	//  index code
    calculate_nft_state_init CALLDICT	//  state_init
    0 PUSHINT	//  state_init _10=0
    SWAP	//  _10=0 state_init
    calculate_nft_address CALLDICT	//  _11
  }>
  get_std_nft_address_by_index PROC:<{
    //  index
    get_nft_address_by_index CALLDICT	//  _1
    REWRITESTDADDR	//  _3 _4
  }>
  member_content PROC:<{
    //  index individual_content
    NIP	//  individual_content
    load_data INLINECALLDICT	//  individual_content _18 _19 _20 _21 _22 _23
    s1 s5 XCHG
    5 BLKDROP	//  individual_content common_content
    CTOS	//  individual_content cs
    NEWC	//  individual_content cs _12
    OVER	//  individual_content cs _12 cs
    SBITS	//  individual_content cs _12 _13
    s1 s2 XCHG	//  individual_content _12 cs _13
    PLDSLICEX	//  individual_content _12 _14
    STSLICER	//  individual_content _15
    STREF	//  _16
    ENDC	//  content
  }>
  member_uri PROC:<{
    //  index individual_content
    DROP	//  index
    load_data INLINECALLDICT	//  index _54 _55 _56 _57 _58 _59
    s1 s5 XCHG
    5 BLKDROP	//  index common_content
    CTOS	//  index _10
    PLDREF	//  index _11
    CTOS	//  index uri_prefix
    SWAP	//  uri_prefix index
    get_nft_address_by_index CALLDICT	//  uri_prefix _15
    REWRITESTDADDR	//  uri_prefix _60 _61
    NIP	//  uri_prefix adr
    NEWC	//  uri_prefix adr encoded_address
    12346 PUSHINT	//  uri_prefix adr encoded_address _20=12346
    SWAP	//  uri_prefix adr _20=12346 encoded_address
    16 STU	//  uri_prefix adr encoded_address
    PUSHNULL	//  uri_prefix adr encoded_address symbols
    WHILE:<{
      s2 PUSH	//  uri_prefix adr encoded_address symbols adr
      0 GTINT	//  uri_prefix adr encoded_address symbols _26
    }>DO<{	//  uri_prefix adr encoded_address symbols
      s0 s2 XCHG
      16 PUSHINT	//  uri_prefix symbols encoded_address adr _28=16
      DIVMOD	//  uri_prefix symbols encoded_address adr rmd
      s0 s3 XCHG2	//  uri_prefix adr encoded_address rmd symbols
      CONS	//  uri_prefix adr encoded_address symbols
    }>	//  uri_prefix adr encoded_address symbols
    s2 POP	//  uri_prefix symbols encoded_address
    WHILE:<{
      OVER	//  uri_prefix symbols encoded_address symbols
      ISNULL	//  uri_prefix symbols encoded_address _31
      NOT	//  uri_prefix symbols encoded_address _32
    }>DO<{	//  uri_prefix symbols encoded_address
      SWAP	//  uri_prefix encoded_address symbols
      UNCONS	//  uri_prefix encoded_address symbol symbols
      OVER	//  uri_prefix encoded_address symbol symbols symbol
      9 GTINT	//  uri_prefix encoded_address symbol symbols _37
      IF:<{	//  uri_prefix encoded_address symbol symbols
        SWAP	//  uri_prefix encoded_address symbols symbol
        7 ADDCONST	//  uri_prefix encoded_address symbols symbol
        SWAP	//  uri_prefix encoded_address symbol symbols
      }>	//  uri_prefix encoded_address symbol symbols
      SWAP	//  uri_prefix encoded_address symbols symbol
      48 ADDCONST	//  uri_prefix encoded_address symbols symbol
      ROT	//  uri_prefix symbols symbol encoded_address
      8 STU	//  uri_prefix symbols encoded_address
    }>	//  uri_prefix symbols encoded_address
    NIP	//  uri_prefix encoded_address
    ENDC	//  uri_prefix _46
    NEWC	//  uri_prefix _46 _47
    s2 PUSH	//  uri_prefix _46 _47 uri_prefix
    SBITS	//  uri_prefix _46 _47 _48
    s1 s3 XCHG	//  _47 _46 uri_prefix _48
    PLDSLICEX	//  _47 _46 _49
    s1 s2 XCHG	//  _46 _47 _49
    STSLICER	//  _46 _50
    STREF	//  _51
    ENDC	//  _52
    CTOS	//  uri
  }>
  royalty_params PROC:<{
    // 
    1 PUSHINT	//  _0=1
    100 PUSHINT	//  _0=1 _1=100
    MYADDR	//  _0=1 _1=100 _2
  }>
}END>c
